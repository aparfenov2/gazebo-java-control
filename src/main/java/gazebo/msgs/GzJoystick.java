// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: joystick.proto

package gazebo.msgs;

public final class GzJoystick {
  private GzJoystick() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface JoystickOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .gazebo.msgs.Vector3d translation = 1;
    /**
     * <code>optional .gazebo.msgs.Vector3d translation = 1;</code>
     *
     * <pre>
     * Translation measurements along the x,y,z
     * axes. These values should be normalized to
     * the range -1...1
     * </pre>
     */
    boolean hasTranslation();
    /**
     * <code>optional .gazebo.msgs.Vector3d translation = 1;</code>
     *
     * <pre>
     * Translation measurements along the x,y,z
     * axes. These values should be normalized to
     * the range -1...1
     * </pre>
     */
    gazebo.msgs.GzVector3d.Vector3d getTranslation();
    /**
     * <code>optional .gazebo.msgs.Vector3d translation = 1;</code>
     *
     * <pre>
     * Translation measurements along the x,y,z
     * axes. These values should be normalized to
     * the range -1...1
     * </pre>
     */
    gazebo.msgs.GzVector3d.Vector3dOrBuilder getTranslationOrBuilder();

    // optional .gazebo.msgs.Vector3d rotation = 2;
    /**
     * <code>optional .gazebo.msgs.Vector3d rotation = 2;</code>
     *
     * <pre>
     * Rotation measurements about the x,y,z 
     * axes. These values should be normalized to
     * the range -1...1
     * </pre>
     */
    boolean hasRotation();
    /**
     * <code>optional .gazebo.msgs.Vector3d rotation = 2;</code>
     *
     * <pre>
     * Rotation measurements about the x,y,z 
     * axes. These values should be normalized to
     * the range -1...1
     * </pre>
     */
    gazebo.msgs.GzVector3d.Vector3d getRotation();
    /**
     * <code>optional .gazebo.msgs.Vector3d rotation = 2;</code>
     *
     * <pre>
     * Rotation measurements about the x,y,z 
     * axes. These values should be normalized to
     * the range -1...1
     * </pre>
     */
    gazebo.msgs.GzVector3d.Vector3dOrBuilder getRotationOrBuilder();

    // repeated int32 buttons = 3;
    /**
     * <code>repeated int32 buttons = 3;</code>
     *
     * <pre>
     * Button measurements
     * </pre>
     */
    java.util.List<java.lang.Integer> getButtonsList();
    /**
     * <code>repeated int32 buttons = 3;</code>
     *
     * <pre>
     * Button measurements
     * </pre>
     */
    int getButtonsCount();
    /**
     * <code>repeated int32 buttons = 3;</code>
     *
     * <pre>
     * Button measurements
     * </pre>
     */
    int getButtons(int index);
  }
  /**
   * Protobuf type {@code gazebo.msgs.Joystick}
   */
  public static final class Joystick extends
      com.google.protobuf.GeneratedMessage
      implements JoystickOrBuilder {
    // Use Joystick.newBuilder() to construct.
    private Joystick(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Joystick(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Joystick defaultInstance;
    public static Joystick getDefaultInstance() {
      return defaultInstance;
    }

    public Joystick getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Joystick(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              gazebo.msgs.GzVector3d.Vector3d.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = translation_.toBuilder();
              }
              translation_ = input.readMessage(gazebo.msgs.GzVector3d.Vector3d.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(translation_);
                translation_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              gazebo.msgs.GzVector3d.Vector3d.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = rotation_.toBuilder();
              }
              rotation_ = input.readMessage(gazebo.msgs.GzVector3d.Vector3d.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(rotation_);
                rotation_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                buttons_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              buttons_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                buttons_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                buttons_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          buttons_ = java.util.Collections.unmodifiableList(buttons_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return gazebo.msgs.GzJoystick.internal_static_gazebo_msgs_Joystick_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return gazebo.msgs.GzJoystick.internal_static_gazebo_msgs_Joystick_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              gazebo.msgs.GzJoystick.Joystick.class, gazebo.msgs.GzJoystick.Joystick.Builder.class);
    }

    public static com.google.protobuf.Parser<Joystick> PARSER =
        new com.google.protobuf.AbstractParser<Joystick>() {
      public Joystick parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Joystick(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Joystick> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .gazebo.msgs.Vector3d translation = 1;
    public static final int TRANSLATION_FIELD_NUMBER = 1;
    private gazebo.msgs.GzVector3d.Vector3d translation_;
    /**
     * <code>optional .gazebo.msgs.Vector3d translation = 1;</code>
     *
     * <pre>
     * Translation measurements along the x,y,z
     * axes. These values should be normalized to
     * the range -1...1
     * </pre>
     */
    public boolean hasTranslation() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .gazebo.msgs.Vector3d translation = 1;</code>
     *
     * <pre>
     * Translation measurements along the x,y,z
     * axes. These values should be normalized to
     * the range -1...1
     * </pre>
     */
    public gazebo.msgs.GzVector3d.Vector3d getTranslation() {
      return translation_;
    }
    /**
     * <code>optional .gazebo.msgs.Vector3d translation = 1;</code>
     *
     * <pre>
     * Translation measurements along the x,y,z
     * axes. These values should be normalized to
     * the range -1...1
     * </pre>
     */
    public gazebo.msgs.GzVector3d.Vector3dOrBuilder getTranslationOrBuilder() {
      return translation_;
    }

    // optional .gazebo.msgs.Vector3d rotation = 2;
    public static final int ROTATION_FIELD_NUMBER = 2;
    private gazebo.msgs.GzVector3d.Vector3d rotation_;
    /**
     * <code>optional .gazebo.msgs.Vector3d rotation = 2;</code>
     *
     * <pre>
     * Rotation measurements about the x,y,z 
     * axes. These values should be normalized to
     * the range -1...1
     * </pre>
     */
    public boolean hasRotation() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .gazebo.msgs.Vector3d rotation = 2;</code>
     *
     * <pre>
     * Rotation measurements about the x,y,z 
     * axes. These values should be normalized to
     * the range -1...1
     * </pre>
     */
    public gazebo.msgs.GzVector3d.Vector3d getRotation() {
      return rotation_;
    }
    /**
     * <code>optional .gazebo.msgs.Vector3d rotation = 2;</code>
     *
     * <pre>
     * Rotation measurements about the x,y,z 
     * axes. These values should be normalized to
     * the range -1...1
     * </pre>
     */
    public gazebo.msgs.GzVector3d.Vector3dOrBuilder getRotationOrBuilder() {
      return rotation_;
    }

    // repeated int32 buttons = 3;
    public static final int BUTTONS_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> buttons_;
    /**
     * <code>repeated int32 buttons = 3;</code>
     *
     * <pre>
     * Button measurements
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getButtonsList() {
      return buttons_;
    }
    /**
     * <code>repeated int32 buttons = 3;</code>
     *
     * <pre>
     * Button measurements
     * </pre>
     */
    public int getButtonsCount() {
      return buttons_.size();
    }
    /**
     * <code>repeated int32 buttons = 3;</code>
     *
     * <pre>
     * Button measurements
     * </pre>
     */
    public int getButtons(int index) {
      return buttons_.get(index);
    }

    private void initFields() {
      translation_ = gazebo.msgs.GzVector3d.Vector3d.getDefaultInstance();
      rotation_ = gazebo.msgs.GzVector3d.Vector3d.getDefaultInstance();
      buttons_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (hasTranslation()) {
        if (!getTranslation().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasRotation()) {
        if (!getRotation().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, translation_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, rotation_);
      }
      for (int i = 0; i < buttons_.size(); i++) {
        output.writeInt32(3, buttons_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, translation_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, rotation_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < buttons_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(buttons_.get(i));
        }
        size += dataSize;
        size += 1 * getButtonsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static gazebo.msgs.GzJoystick.Joystick parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gazebo.msgs.GzJoystick.Joystick parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gazebo.msgs.GzJoystick.Joystick parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gazebo.msgs.GzJoystick.Joystick parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gazebo.msgs.GzJoystick.Joystick parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static gazebo.msgs.GzJoystick.Joystick parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static gazebo.msgs.GzJoystick.Joystick parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static gazebo.msgs.GzJoystick.Joystick parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static gazebo.msgs.GzJoystick.Joystick parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static gazebo.msgs.GzJoystick.Joystick parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(gazebo.msgs.GzJoystick.Joystick prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gazebo.msgs.Joystick}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements gazebo.msgs.GzJoystick.JoystickOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gazebo.msgs.GzJoystick.internal_static_gazebo_msgs_Joystick_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gazebo.msgs.GzJoystick.internal_static_gazebo_msgs_Joystick_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gazebo.msgs.GzJoystick.Joystick.class, gazebo.msgs.GzJoystick.Joystick.Builder.class);
      }

      // Construct using gazebo.msgs.GzJoystick.Joystick.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getTranslationFieldBuilder();
          getRotationFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (translationBuilder_ == null) {
          translation_ = gazebo.msgs.GzVector3d.Vector3d.getDefaultInstance();
        } else {
          translationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (rotationBuilder_ == null) {
          rotation_ = gazebo.msgs.GzVector3d.Vector3d.getDefaultInstance();
        } else {
          rotationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        buttons_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return gazebo.msgs.GzJoystick.internal_static_gazebo_msgs_Joystick_descriptor;
      }

      public gazebo.msgs.GzJoystick.Joystick getDefaultInstanceForType() {
        return gazebo.msgs.GzJoystick.Joystick.getDefaultInstance();
      }

      public gazebo.msgs.GzJoystick.Joystick build() {
        gazebo.msgs.GzJoystick.Joystick result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public gazebo.msgs.GzJoystick.Joystick buildPartial() {
        gazebo.msgs.GzJoystick.Joystick result = new gazebo.msgs.GzJoystick.Joystick(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (translationBuilder_ == null) {
          result.translation_ = translation_;
        } else {
          result.translation_ = translationBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (rotationBuilder_ == null) {
          result.rotation_ = rotation_;
        } else {
          result.rotation_ = rotationBuilder_.build();
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          buttons_ = java.util.Collections.unmodifiableList(buttons_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.buttons_ = buttons_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof gazebo.msgs.GzJoystick.Joystick) {
          return mergeFrom((gazebo.msgs.GzJoystick.Joystick)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(gazebo.msgs.GzJoystick.Joystick other) {
        if (other == gazebo.msgs.GzJoystick.Joystick.getDefaultInstance()) return this;
        if (other.hasTranslation()) {
          mergeTranslation(other.getTranslation());
        }
        if (other.hasRotation()) {
          mergeRotation(other.getRotation());
        }
        if (!other.buttons_.isEmpty()) {
          if (buttons_.isEmpty()) {
            buttons_ = other.buttons_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureButtonsIsMutable();
            buttons_.addAll(other.buttons_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (hasTranslation()) {
          if (!getTranslation().isInitialized()) {
            
            return false;
          }
        }
        if (hasRotation()) {
          if (!getRotation().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        gazebo.msgs.GzJoystick.Joystick parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (gazebo.msgs.GzJoystick.Joystick) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .gazebo.msgs.Vector3d translation = 1;
      private gazebo.msgs.GzVector3d.Vector3d translation_ = gazebo.msgs.GzVector3d.Vector3d.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          gazebo.msgs.GzVector3d.Vector3d, gazebo.msgs.GzVector3d.Vector3d.Builder, gazebo.msgs.GzVector3d.Vector3dOrBuilder> translationBuilder_;
      /**
       * <code>optional .gazebo.msgs.Vector3d translation = 1;</code>
       *
       * <pre>
       * Translation measurements along the x,y,z
       * axes. These values should be normalized to
       * the range -1...1
       * </pre>
       */
      public boolean hasTranslation() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .gazebo.msgs.Vector3d translation = 1;</code>
       *
       * <pre>
       * Translation measurements along the x,y,z
       * axes. These values should be normalized to
       * the range -1...1
       * </pre>
       */
      public gazebo.msgs.GzVector3d.Vector3d getTranslation() {
        if (translationBuilder_ == null) {
          return translation_;
        } else {
          return translationBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .gazebo.msgs.Vector3d translation = 1;</code>
       *
       * <pre>
       * Translation measurements along the x,y,z
       * axes. These values should be normalized to
       * the range -1...1
       * </pre>
       */
      public Builder setTranslation(gazebo.msgs.GzVector3d.Vector3d value) {
        if (translationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          translation_ = value;
          onChanged();
        } else {
          translationBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .gazebo.msgs.Vector3d translation = 1;</code>
       *
       * <pre>
       * Translation measurements along the x,y,z
       * axes. These values should be normalized to
       * the range -1...1
       * </pre>
       */
      public Builder setTranslation(
          gazebo.msgs.GzVector3d.Vector3d.Builder builderForValue) {
        if (translationBuilder_ == null) {
          translation_ = builderForValue.build();
          onChanged();
        } else {
          translationBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .gazebo.msgs.Vector3d translation = 1;</code>
       *
       * <pre>
       * Translation measurements along the x,y,z
       * axes. These values should be normalized to
       * the range -1...1
       * </pre>
       */
      public Builder mergeTranslation(gazebo.msgs.GzVector3d.Vector3d value) {
        if (translationBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              translation_ != gazebo.msgs.GzVector3d.Vector3d.getDefaultInstance()) {
            translation_ =
              gazebo.msgs.GzVector3d.Vector3d.newBuilder(translation_).mergeFrom(value).buildPartial();
          } else {
            translation_ = value;
          }
          onChanged();
        } else {
          translationBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .gazebo.msgs.Vector3d translation = 1;</code>
       *
       * <pre>
       * Translation measurements along the x,y,z
       * axes. These values should be normalized to
       * the range -1...1
       * </pre>
       */
      public Builder clearTranslation() {
        if (translationBuilder_ == null) {
          translation_ = gazebo.msgs.GzVector3d.Vector3d.getDefaultInstance();
          onChanged();
        } else {
          translationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .gazebo.msgs.Vector3d translation = 1;</code>
       *
       * <pre>
       * Translation measurements along the x,y,z
       * axes. These values should be normalized to
       * the range -1...1
       * </pre>
       */
      public gazebo.msgs.GzVector3d.Vector3d.Builder getTranslationBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getTranslationFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .gazebo.msgs.Vector3d translation = 1;</code>
       *
       * <pre>
       * Translation measurements along the x,y,z
       * axes. These values should be normalized to
       * the range -1...1
       * </pre>
       */
      public gazebo.msgs.GzVector3d.Vector3dOrBuilder getTranslationOrBuilder() {
        if (translationBuilder_ != null) {
          return translationBuilder_.getMessageOrBuilder();
        } else {
          return translation_;
        }
      }
      /**
       * <code>optional .gazebo.msgs.Vector3d translation = 1;</code>
       *
       * <pre>
       * Translation measurements along the x,y,z
       * axes. These values should be normalized to
       * the range -1...1
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          gazebo.msgs.GzVector3d.Vector3d, gazebo.msgs.GzVector3d.Vector3d.Builder, gazebo.msgs.GzVector3d.Vector3dOrBuilder> 
          getTranslationFieldBuilder() {
        if (translationBuilder_ == null) {
          translationBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              gazebo.msgs.GzVector3d.Vector3d, gazebo.msgs.GzVector3d.Vector3d.Builder, gazebo.msgs.GzVector3d.Vector3dOrBuilder>(
                  translation_,
                  getParentForChildren(),
                  isClean());
          translation_ = null;
        }
        return translationBuilder_;
      }

      // optional .gazebo.msgs.Vector3d rotation = 2;
      private gazebo.msgs.GzVector3d.Vector3d rotation_ = gazebo.msgs.GzVector3d.Vector3d.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          gazebo.msgs.GzVector3d.Vector3d, gazebo.msgs.GzVector3d.Vector3d.Builder, gazebo.msgs.GzVector3d.Vector3dOrBuilder> rotationBuilder_;
      /**
       * <code>optional .gazebo.msgs.Vector3d rotation = 2;</code>
       *
       * <pre>
       * Rotation measurements about the x,y,z 
       * axes. These values should be normalized to
       * the range -1...1
       * </pre>
       */
      public boolean hasRotation() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .gazebo.msgs.Vector3d rotation = 2;</code>
       *
       * <pre>
       * Rotation measurements about the x,y,z 
       * axes. These values should be normalized to
       * the range -1...1
       * </pre>
       */
      public gazebo.msgs.GzVector3d.Vector3d getRotation() {
        if (rotationBuilder_ == null) {
          return rotation_;
        } else {
          return rotationBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .gazebo.msgs.Vector3d rotation = 2;</code>
       *
       * <pre>
       * Rotation measurements about the x,y,z 
       * axes. These values should be normalized to
       * the range -1...1
       * </pre>
       */
      public Builder setRotation(gazebo.msgs.GzVector3d.Vector3d value) {
        if (rotationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          rotation_ = value;
          onChanged();
        } else {
          rotationBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .gazebo.msgs.Vector3d rotation = 2;</code>
       *
       * <pre>
       * Rotation measurements about the x,y,z 
       * axes. These values should be normalized to
       * the range -1...1
       * </pre>
       */
      public Builder setRotation(
          gazebo.msgs.GzVector3d.Vector3d.Builder builderForValue) {
        if (rotationBuilder_ == null) {
          rotation_ = builderForValue.build();
          onChanged();
        } else {
          rotationBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .gazebo.msgs.Vector3d rotation = 2;</code>
       *
       * <pre>
       * Rotation measurements about the x,y,z 
       * axes. These values should be normalized to
       * the range -1...1
       * </pre>
       */
      public Builder mergeRotation(gazebo.msgs.GzVector3d.Vector3d value) {
        if (rotationBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              rotation_ != gazebo.msgs.GzVector3d.Vector3d.getDefaultInstance()) {
            rotation_ =
              gazebo.msgs.GzVector3d.Vector3d.newBuilder(rotation_).mergeFrom(value).buildPartial();
          } else {
            rotation_ = value;
          }
          onChanged();
        } else {
          rotationBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .gazebo.msgs.Vector3d rotation = 2;</code>
       *
       * <pre>
       * Rotation measurements about the x,y,z 
       * axes. These values should be normalized to
       * the range -1...1
       * </pre>
       */
      public Builder clearRotation() {
        if (rotationBuilder_ == null) {
          rotation_ = gazebo.msgs.GzVector3d.Vector3d.getDefaultInstance();
          onChanged();
        } else {
          rotationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .gazebo.msgs.Vector3d rotation = 2;</code>
       *
       * <pre>
       * Rotation measurements about the x,y,z 
       * axes. These values should be normalized to
       * the range -1...1
       * </pre>
       */
      public gazebo.msgs.GzVector3d.Vector3d.Builder getRotationBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getRotationFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .gazebo.msgs.Vector3d rotation = 2;</code>
       *
       * <pre>
       * Rotation measurements about the x,y,z 
       * axes. These values should be normalized to
       * the range -1...1
       * </pre>
       */
      public gazebo.msgs.GzVector3d.Vector3dOrBuilder getRotationOrBuilder() {
        if (rotationBuilder_ != null) {
          return rotationBuilder_.getMessageOrBuilder();
        } else {
          return rotation_;
        }
      }
      /**
       * <code>optional .gazebo.msgs.Vector3d rotation = 2;</code>
       *
       * <pre>
       * Rotation measurements about the x,y,z 
       * axes. These values should be normalized to
       * the range -1...1
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          gazebo.msgs.GzVector3d.Vector3d, gazebo.msgs.GzVector3d.Vector3d.Builder, gazebo.msgs.GzVector3d.Vector3dOrBuilder> 
          getRotationFieldBuilder() {
        if (rotationBuilder_ == null) {
          rotationBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              gazebo.msgs.GzVector3d.Vector3d, gazebo.msgs.GzVector3d.Vector3d.Builder, gazebo.msgs.GzVector3d.Vector3dOrBuilder>(
                  rotation_,
                  getParentForChildren(),
                  isClean());
          rotation_ = null;
        }
        return rotationBuilder_;
      }

      // repeated int32 buttons = 3;
      private java.util.List<java.lang.Integer> buttons_ = java.util.Collections.emptyList();
      private void ensureButtonsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          buttons_ = new java.util.ArrayList<java.lang.Integer>(buttons_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 buttons = 3;</code>
       *
       * <pre>
       * Button measurements
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getButtonsList() {
        return java.util.Collections.unmodifiableList(buttons_);
      }
      /**
       * <code>repeated int32 buttons = 3;</code>
       *
       * <pre>
       * Button measurements
       * </pre>
       */
      public int getButtonsCount() {
        return buttons_.size();
      }
      /**
       * <code>repeated int32 buttons = 3;</code>
       *
       * <pre>
       * Button measurements
       * </pre>
       */
      public int getButtons(int index) {
        return buttons_.get(index);
      }
      /**
       * <code>repeated int32 buttons = 3;</code>
       *
       * <pre>
       * Button measurements
       * </pre>
       */
      public Builder setButtons(
          int index, int value) {
        ensureButtonsIsMutable();
        buttons_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 buttons = 3;</code>
       *
       * <pre>
       * Button measurements
       * </pre>
       */
      public Builder addButtons(int value) {
        ensureButtonsIsMutable();
        buttons_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 buttons = 3;</code>
       *
       * <pre>
       * Button measurements
       * </pre>
       */
      public Builder addAllButtons(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureButtonsIsMutable();
        super.addAll(values, buttons_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 buttons = 3;</code>
       *
       * <pre>
       * Button measurements
       * </pre>
       */
      public Builder clearButtons() {
        buttons_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:gazebo.msgs.Joystick)
    }

    static {
      defaultInstance = new Joystick(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:gazebo.msgs.Joystick)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_gazebo_msgs_Joystick_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gazebo_msgs_Joystick_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016joystick.proto\022\013gazebo.msgs\032\016vector3d." +
      "proto\"p\n\010Joystick\022*\n\013translation\030\001 \001(\0132\025" +
      ".gazebo.msgs.Vector3d\022\'\n\010rotation\030\002 \001(\0132" +
      "\025.gazebo.msgs.Vector3d\022\017\n\007buttons\030\003 \003(\005B" +
      "\014B\nGzJoystick"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_gazebo_msgs_Joystick_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_gazebo_msgs_Joystick_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_gazebo_msgs_Joystick_descriptor,
              new java.lang.String[] { "Translation", "Rotation", "Buttons", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          gazebo.msgs.GzVector3d.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: image.proto

package gazebo.msgs;

public final class GzImage {
  private GzImage() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ImageOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required uint32 width = 1;
    /**
     * <code>required uint32 width = 1;</code>
     *
     * <pre>
     * Image width (number of columns)
     * </pre>
     */
    boolean hasWidth();
    /**
     * <code>required uint32 width = 1;</code>
     *
     * <pre>
     * Image width (number of columns)
     * </pre>
     */
    int getWidth();

    // required uint32 height = 2;
    /**
     * <code>required uint32 height = 2;</code>
     *
     * <pre>
     * Image height (number of rows)
     * </pre>
     */
    boolean hasHeight();
    /**
     * <code>required uint32 height = 2;</code>
     *
     * <pre>
     * Image height (number of rows)
     * </pre>
     */
    int getHeight();

    // required uint32 pixel_format = 3;
    /**
     * <code>required uint32 pixel_format = 3;</code>
     *
     * <pre>
     * Corresponds to Image::PixelFormat enum
     * </pre>
     */
    boolean hasPixelFormat();
    /**
     * <code>required uint32 pixel_format = 3;</code>
     *
     * <pre>
     * Corresponds to Image::PixelFormat enum
     * </pre>
     */
    int getPixelFormat();

    // required uint32 step = 4;
    /**
     * <code>required uint32 step = 4;</code>
     *
     * <pre>
     * Full row length in bytes
     * </pre>
     */
    boolean hasStep();
    /**
     * <code>required uint32 step = 4;</code>
     *
     * <pre>
     * Full row length in bytes
     * </pre>
     */
    int getStep();

    // required bytes data = 5;
    /**
     * <code>required bytes data = 5;</code>
     *
     * <pre>
     * repeated uint32 data          = 5; // Actual data, size if (step * rows)
     * </pre>
     */
    boolean hasData();
    /**
     * <code>required bytes data = 5;</code>
     *
     * <pre>
     * repeated uint32 data          = 5; // Actual data, size if (step * rows)
     * </pre>
     */
    com.google.protobuf.ByteString getData();
  }
  /**
   * Protobuf type {@code gazebo.msgs.Image}
   */
  public static final class Image extends
      com.google.protobuf.GeneratedMessage
      implements ImageOrBuilder {
    // Use Image.newBuilder() to construct.
    private Image(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Image(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Image defaultInstance;
    public static Image getDefaultInstance() {
      return defaultInstance;
    }

    public Image getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Image(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              width_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              height_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              pixelFormat_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              step_ = input.readUInt32();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              data_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return gazebo.msgs.GzImage.internal_static_gazebo_msgs_Image_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return gazebo.msgs.GzImage.internal_static_gazebo_msgs_Image_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              gazebo.msgs.GzImage.Image.class, gazebo.msgs.GzImage.Image.Builder.class);
    }

    public static com.google.protobuf.Parser<Image> PARSER =
        new com.google.protobuf.AbstractParser<Image>() {
      public Image parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Image(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Image> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 width = 1;
    public static final int WIDTH_FIELD_NUMBER = 1;
    private int width_;
    /**
     * <code>required uint32 width = 1;</code>
     *
     * <pre>
     * Image width (number of columns)
     * </pre>
     */
    public boolean hasWidth() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 width = 1;</code>
     *
     * <pre>
     * Image width (number of columns)
     * </pre>
     */
    public int getWidth() {
      return width_;
    }

    // required uint32 height = 2;
    public static final int HEIGHT_FIELD_NUMBER = 2;
    private int height_;
    /**
     * <code>required uint32 height = 2;</code>
     *
     * <pre>
     * Image height (number of rows)
     * </pre>
     */
    public boolean hasHeight() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 height = 2;</code>
     *
     * <pre>
     * Image height (number of rows)
     * </pre>
     */
    public int getHeight() {
      return height_;
    }

    // required uint32 pixel_format = 3;
    public static final int PIXEL_FORMAT_FIELD_NUMBER = 3;
    private int pixelFormat_;
    /**
     * <code>required uint32 pixel_format = 3;</code>
     *
     * <pre>
     * Corresponds to Image::PixelFormat enum
     * </pre>
     */
    public boolean hasPixelFormat() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint32 pixel_format = 3;</code>
     *
     * <pre>
     * Corresponds to Image::PixelFormat enum
     * </pre>
     */
    public int getPixelFormat() {
      return pixelFormat_;
    }

    // required uint32 step = 4;
    public static final int STEP_FIELD_NUMBER = 4;
    private int step_;
    /**
     * <code>required uint32 step = 4;</code>
     *
     * <pre>
     * Full row length in bytes
     * </pre>
     */
    public boolean hasStep() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required uint32 step = 4;</code>
     *
     * <pre>
     * Full row length in bytes
     * </pre>
     */
    public int getStep() {
      return step_;
    }

    // required bytes data = 5;
    public static final int DATA_FIELD_NUMBER = 5;
    private com.google.protobuf.ByteString data_;
    /**
     * <code>required bytes data = 5;</code>
     *
     * <pre>
     * repeated uint32 data          = 5; // Actual data, size if (step * rows)
     * </pre>
     */
    public boolean hasData() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required bytes data = 5;</code>
     *
     * <pre>
     * repeated uint32 data          = 5; // Actual data, size if (step * rows)
     * </pre>
     */
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    private void initFields() {
      width_ = 0;
      height_ = 0;
      pixelFormat_ = 0;
      step_ = 0;
      data_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasWidth()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHeight()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPixelFormat()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStep()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasData()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, width_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, height_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, pixelFormat_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, step_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, data_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, width_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, height_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, pixelFormat_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, step_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, data_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static gazebo.msgs.GzImage.Image parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gazebo.msgs.GzImage.Image parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gazebo.msgs.GzImage.Image parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gazebo.msgs.GzImage.Image parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gazebo.msgs.GzImage.Image parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static gazebo.msgs.GzImage.Image parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static gazebo.msgs.GzImage.Image parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static gazebo.msgs.GzImage.Image parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static gazebo.msgs.GzImage.Image parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static gazebo.msgs.GzImage.Image parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(gazebo.msgs.GzImage.Image prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gazebo.msgs.Image}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements gazebo.msgs.GzImage.ImageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gazebo.msgs.GzImage.internal_static_gazebo_msgs_Image_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gazebo.msgs.GzImage.internal_static_gazebo_msgs_Image_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gazebo.msgs.GzImage.Image.class, gazebo.msgs.GzImage.Image.Builder.class);
      }

      // Construct using gazebo.msgs.GzImage.Image.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        width_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        height_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        pixelFormat_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        step_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        data_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return gazebo.msgs.GzImage.internal_static_gazebo_msgs_Image_descriptor;
      }

      public gazebo.msgs.GzImage.Image getDefaultInstanceForType() {
        return gazebo.msgs.GzImage.Image.getDefaultInstance();
      }

      public gazebo.msgs.GzImage.Image build() {
        gazebo.msgs.GzImage.Image result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public gazebo.msgs.GzImage.Image buildPartial() {
        gazebo.msgs.GzImage.Image result = new gazebo.msgs.GzImage.Image(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.width_ = width_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.height_ = height_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.pixelFormat_ = pixelFormat_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.step_ = step_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.data_ = data_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof gazebo.msgs.GzImage.Image) {
          return mergeFrom((gazebo.msgs.GzImage.Image)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(gazebo.msgs.GzImage.Image other) {
        if (other == gazebo.msgs.GzImage.Image.getDefaultInstance()) return this;
        if (other.hasWidth()) {
          setWidth(other.getWidth());
        }
        if (other.hasHeight()) {
          setHeight(other.getHeight());
        }
        if (other.hasPixelFormat()) {
          setPixelFormat(other.getPixelFormat());
        }
        if (other.hasStep()) {
          setStep(other.getStep());
        }
        if (other.hasData()) {
          setData(other.getData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasWidth()) {
          
          return false;
        }
        if (!hasHeight()) {
          
          return false;
        }
        if (!hasPixelFormat()) {
          
          return false;
        }
        if (!hasStep()) {
          
          return false;
        }
        if (!hasData()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        gazebo.msgs.GzImage.Image parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (gazebo.msgs.GzImage.Image) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 width = 1;
      private int width_ ;
      /**
       * <code>required uint32 width = 1;</code>
       *
       * <pre>
       * Image width (number of columns)
       * </pre>
       */
      public boolean hasWidth() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 width = 1;</code>
       *
       * <pre>
       * Image width (number of columns)
       * </pre>
       */
      public int getWidth() {
        return width_;
      }
      /**
       * <code>required uint32 width = 1;</code>
       *
       * <pre>
       * Image width (number of columns)
       * </pre>
       */
      public Builder setWidth(int value) {
        bitField0_ |= 0x00000001;
        width_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 width = 1;</code>
       *
       * <pre>
       * Image width (number of columns)
       * </pre>
       */
      public Builder clearWidth() {
        bitField0_ = (bitField0_ & ~0x00000001);
        width_ = 0;
        onChanged();
        return this;
      }

      // required uint32 height = 2;
      private int height_ ;
      /**
       * <code>required uint32 height = 2;</code>
       *
       * <pre>
       * Image height (number of rows)
       * </pre>
       */
      public boolean hasHeight() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 height = 2;</code>
       *
       * <pre>
       * Image height (number of rows)
       * </pre>
       */
      public int getHeight() {
        return height_;
      }
      /**
       * <code>required uint32 height = 2;</code>
       *
       * <pre>
       * Image height (number of rows)
       * </pre>
       */
      public Builder setHeight(int value) {
        bitField0_ |= 0x00000002;
        height_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 height = 2;</code>
       *
       * <pre>
       * Image height (number of rows)
       * </pre>
       */
      public Builder clearHeight() {
        bitField0_ = (bitField0_ & ~0x00000002);
        height_ = 0;
        onChanged();
        return this;
      }

      // required uint32 pixel_format = 3;
      private int pixelFormat_ ;
      /**
       * <code>required uint32 pixel_format = 3;</code>
       *
       * <pre>
       * Corresponds to Image::PixelFormat enum
       * </pre>
       */
      public boolean hasPixelFormat() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint32 pixel_format = 3;</code>
       *
       * <pre>
       * Corresponds to Image::PixelFormat enum
       * </pre>
       */
      public int getPixelFormat() {
        return pixelFormat_;
      }
      /**
       * <code>required uint32 pixel_format = 3;</code>
       *
       * <pre>
       * Corresponds to Image::PixelFormat enum
       * </pre>
       */
      public Builder setPixelFormat(int value) {
        bitField0_ |= 0x00000004;
        pixelFormat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 pixel_format = 3;</code>
       *
       * <pre>
       * Corresponds to Image::PixelFormat enum
       * </pre>
       */
      public Builder clearPixelFormat() {
        bitField0_ = (bitField0_ & ~0x00000004);
        pixelFormat_ = 0;
        onChanged();
        return this;
      }

      // required uint32 step = 4;
      private int step_ ;
      /**
       * <code>required uint32 step = 4;</code>
       *
       * <pre>
       * Full row length in bytes
       * </pre>
       */
      public boolean hasStep() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required uint32 step = 4;</code>
       *
       * <pre>
       * Full row length in bytes
       * </pre>
       */
      public int getStep() {
        return step_;
      }
      /**
       * <code>required uint32 step = 4;</code>
       *
       * <pre>
       * Full row length in bytes
       * </pre>
       */
      public Builder setStep(int value) {
        bitField0_ |= 0x00000008;
        step_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 step = 4;</code>
       *
       * <pre>
       * Full row length in bytes
       * </pre>
       */
      public Builder clearStep() {
        bitField0_ = (bitField0_ & ~0x00000008);
        step_ = 0;
        onChanged();
        return this;
      }

      // required bytes data = 5;
      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes data = 5;</code>
       *
       * <pre>
       * repeated uint32 data          = 5; // Actual data, size if (step * rows)
       * </pre>
       */
      public boolean hasData() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required bytes data = 5;</code>
       *
       * <pre>
       * repeated uint32 data          = 5; // Actual data, size if (step * rows)
       * </pre>
       */
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <code>required bytes data = 5;</code>
       *
       * <pre>
       * repeated uint32 data          = 5; // Actual data, size if (step * rows)
       * </pre>
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes data = 5;</code>
       *
       * <pre>
       * repeated uint32 data          = 5; // Actual data, size if (step * rows)
       * </pre>
       */
      public Builder clearData() {
        bitField0_ = (bitField0_ & ~0x00000010);
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:gazebo.msgs.Image)
    }

    static {
      defaultInstance = new Image(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:gazebo.msgs.Image)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_gazebo_msgs_Image_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gazebo_msgs_Image_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\013image.proto\022\013gazebo.msgs\"X\n\005Image\022\r\n\005w" +
      "idth\030\001 \002(\r\022\016\n\006height\030\002 \002(\r\022\024\n\014pixel_form" +
      "at\030\003 \002(\r\022\014\n\004step\030\004 \002(\r\022\014\n\004data\030\005 \002(\014B\tB\007" +
      "GzImage"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_gazebo_msgs_Image_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_gazebo_msgs_Image_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_gazebo_msgs_Image_descriptor,
              new java.lang.String[] { "Width", "Height", "PixelFormat", "Step", "Data", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}

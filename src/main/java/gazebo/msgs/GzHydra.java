// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hydra.proto

package gazebo.msgs;

public final class GzHydra {
  private GzHydra() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface HydraOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .gazebo.msgs.Hydra.Paddle right = 1;
    /**
     * <code>required .gazebo.msgs.Hydra.Paddle right = 1;</code>
     *
     * <pre>
     * Info for the right paddle
     * </pre>
     */
    boolean hasRight();
    /**
     * <code>required .gazebo.msgs.Hydra.Paddle right = 1;</code>
     *
     * <pre>
     * Info for the right paddle
     * </pre>
     */
    gazebo.msgs.GzHydra.Hydra.Paddle getRight();
    /**
     * <code>required .gazebo.msgs.Hydra.Paddle right = 1;</code>
     *
     * <pre>
     * Info for the right paddle
     * </pre>
     */
    gazebo.msgs.GzHydra.Hydra.PaddleOrBuilder getRightOrBuilder();

    // required .gazebo.msgs.Hydra.Paddle left = 2;
    /**
     * <code>required .gazebo.msgs.Hydra.Paddle left = 2;</code>
     *
     * <pre>
     * Info for the left paddle
     * </pre>
     */
    boolean hasLeft();
    /**
     * <code>required .gazebo.msgs.Hydra.Paddle left = 2;</code>
     *
     * <pre>
     * Info for the left paddle
     * </pre>
     */
    gazebo.msgs.GzHydra.Hydra.Paddle getLeft();
    /**
     * <code>required .gazebo.msgs.Hydra.Paddle left = 2;</code>
     *
     * <pre>
     * Info for the left paddle
     * </pre>
     */
    gazebo.msgs.GzHydra.Hydra.PaddleOrBuilder getLeftOrBuilder();
  }
  /**
   * Protobuf type {@code gazebo.msgs.Hydra}
   */
  public static final class Hydra extends
      com.google.protobuf.GeneratedMessage
      implements HydraOrBuilder {
    // Use Hydra.newBuilder() to construct.
    private Hydra(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Hydra(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Hydra defaultInstance;
    public static Hydra getDefaultInstance() {
      return defaultInstance;
    }

    public Hydra getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Hydra(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              gazebo.msgs.GzHydra.Hydra.Paddle.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = right_.toBuilder();
              }
              right_ = input.readMessage(gazebo.msgs.GzHydra.Hydra.Paddle.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(right_);
                right_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              gazebo.msgs.GzHydra.Hydra.Paddle.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = left_.toBuilder();
              }
              left_ = input.readMessage(gazebo.msgs.GzHydra.Hydra.Paddle.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(left_);
                left_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return gazebo.msgs.GzHydra.internal_static_gazebo_msgs_Hydra_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return gazebo.msgs.GzHydra.internal_static_gazebo_msgs_Hydra_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              gazebo.msgs.GzHydra.Hydra.class, gazebo.msgs.GzHydra.Hydra.Builder.class);
    }

    public static com.google.protobuf.Parser<Hydra> PARSER =
        new com.google.protobuf.AbstractParser<Hydra>() {
      public Hydra parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Hydra(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Hydra> getParserForType() {
      return PARSER;
    }

    public interface PaddleOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // required .gazebo.msgs.Pose pose = 1;
      /**
       * <code>required .gazebo.msgs.Pose pose = 1;</code>
       *
       * <pre>
       * Pose of the paddle
       * </pre>
       */
      boolean hasPose();
      /**
       * <code>required .gazebo.msgs.Pose pose = 1;</code>
       *
       * <pre>
       * Pose of the paddle
       * </pre>
       */
      gazebo.msgs.GzPose.Pose getPose();
      /**
       * <code>required .gazebo.msgs.Pose pose = 1;</code>
       *
       * <pre>
       * Pose of the paddle
       * </pre>
       */
      gazebo.msgs.GzPose.PoseOrBuilder getPoseOrBuilder();

      // required bool button_bumper = 2;
      /**
       * <code>required bool button_bumper = 2;</code>
       *
       * <pre>
       * The button labeled LB
       * </pre>
       */
      boolean hasButtonBumper();
      /**
       * <code>required bool button_bumper = 2;</code>
       *
       * <pre>
       * The button labeled LB
       * </pre>
       */
      boolean getButtonBumper();

      // required bool button_1 = 3;
      /**
       * <code>required bool button_1 = 3;</code>
       *
       * <pre>
       * Button 1
       * </pre>
       */
      boolean hasButton1();
      /**
       * <code>required bool button_1 = 3;</code>
       *
       * <pre>
       * Button 1
       * </pre>
       */
      boolean getButton1();

      // required bool button_2 = 4;
      /**
       * <code>required bool button_2 = 4;</code>
       *
       * <pre>
       * Button 2
       * </pre>
       */
      boolean hasButton2();
      /**
       * <code>required bool button_2 = 4;</code>
       *
       * <pre>
       * Button 2
       * </pre>
       */
      boolean getButton2();

      // required bool button_3 = 5;
      /**
       * <code>required bool button_3 = 5;</code>
       *
       * <pre>
       * Button 3
       * </pre>
       */
      boolean hasButton3();
      /**
       * <code>required bool button_3 = 5;</code>
       *
       * <pre>
       * Button 3
       * </pre>
       */
      boolean getButton3();

      // required bool button_4 = 6;
      /**
       * <code>required bool button_4 = 6;</code>
       *
       * <pre>
       * Button 4
       * </pre>
       */
      boolean hasButton4();
      /**
       * <code>required bool button_4 = 6;</code>
       *
       * <pre>
       * Button 4
       * </pre>
       */
      boolean getButton4();

      // required bool button_joy = 7;
      /**
       * <code>required bool button_joy = 7;</code>
       *
       * <pre>
       * Button that is activated by pressing down on the joystick.
       * </pre>
       */
      boolean hasButtonJoy();
      /**
       * <code>required bool button_joy = 7;</code>
       *
       * <pre>
       * Button that is activated by pressing down on the joystick.
       * </pre>
       */
      boolean getButtonJoy();

      // required bool button_center = 8;
      /**
       * <code>required bool button_center = 8;</code>
       *
       * <pre>
       * The button located between button 1 and 2.
       * </pre>
       */
      boolean hasButtonCenter();
      /**
       * <code>required bool button_center = 8;</code>
       *
       * <pre>
       * The button located between button 1 and 2.
       * </pre>
       */
      boolean getButtonCenter();

      // required double joy_x = 9;
      /**
       * <code>required double joy_x = 9;</code>
       *
       * <pre>
       * Range(-1, 1) where -1 == back, and +1 == forward.
       * </pre>
       */
      boolean hasJoyX();
      /**
       * <code>required double joy_x = 9;</code>
       *
       * <pre>
       * Range(-1, 1) where -1 == back, and +1 == forward.
       * </pre>
       */
      double getJoyX();

      // required double joy_y = 10;
      /**
       * <code>required double joy_y = 10;</code>
       *
       * <pre>
       * Range(-1, 1) where -1 == left, and +1 == right.
       * </pre>
       */
      boolean hasJoyY();
      /**
       * <code>required double joy_y = 10;</code>
       *
       * <pre>
       * Range(-1, 1) where -1 == left, and +1 == right.
       * </pre>
       */
      double getJoyY();

      // required double trigger = 11;
      /**
       * <code>required double trigger = 11;</code>
       *
       * <pre>
       * Range(0, 1) where 0 is no press, and 1 is full press.
       * </pre>
       */
      boolean hasTrigger();
      /**
       * <code>required double trigger = 11;</code>
       *
       * <pre>
       * Range(0, 1) where 0 is no press, and 1 is full press.
       * </pre>
       */
      double getTrigger();
    }
    /**
     * Protobuf type {@code gazebo.msgs.Hydra.Paddle}
     */
    public static final class Paddle extends
        com.google.protobuf.GeneratedMessage
        implements PaddleOrBuilder {
      // Use Paddle.newBuilder() to construct.
      private Paddle(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Paddle(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Paddle defaultInstance;
      public static Paddle getDefaultInstance() {
        return defaultInstance;
      }

      public Paddle getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Paddle(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                gazebo.msgs.GzPose.Pose.Builder subBuilder = null;
                if (((bitField0_ & 0x00000001) == 0x00000001)) {
                  subBuilder = pose_.toBuilder();
                }
                pose_ = input.readMessage(gazebo.msgs.GzPose.Pose.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(pose_);
                  pose_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000001;
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                buttonBumper_ = input.readBool();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                button1_ = input.readBool();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                button2_ = input.readBool();
                break;
              }
              case 40: {
                bitField0_ |= 0x00000010;
                button3_ = input.readBool();
                break;
              }
              case 48: {
                bitField0_ |= 0x00000020;
                button4_ = input.readBool();
                break;
              }
              case 56: {
                bitField0_ |= 0x00000040;
                buttonJoy_ = input.readBool();
                break;
              }
              case 64: {
                bitField0_ |= 0x00000080;
                buttonCenter_ = input.readBool();
                break;
              }
              case 73: {
                bitField0_ |= 0x00000100;
                joyX_ = input.readDouble();
                break;
              }
              case 81: {
                bitField0_ |= 0x00000200;
                joyY_ = input.readDouble();
                break;
              }
              case 89: {
                bitField0_ |= 0x00000400;
                trigger_ = input.readDouble();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gazebo.msgs.GzHydra.internal_static_gazebo_msgs_Hydra_Paddle_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gazebo.msgs.GzHydra.internal_static_gazebo_msgs_Hydra_Paddle_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gazebo.msgs.GzHydra.Hydra.Paddle.class, gazebo.msgs.GzHydra.Hydra.Paddle.Builder.class);
      }

      public static com.google.protobuf.Parser<Paddle> PARSER =
          new com.google.protobuf.AbstractParser<Paddle>() {
        public Paddle parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Paddle(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Paddle> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // required .gazebo.msgs.Pose pose = 1;
      public static final int POSE_FIELD_NUMBER = 1;
      private gazebo.msgs.GzPose.Pose pose_;
      /**
       * <code>required .gazebo.msgs.Pose pose = 1;</code>
       *
       * <pre>
       * Pose of the paddle
       * </pre>
       */
      public boolean hasPose() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .gazebo.msgs.Pose pose = 1;</code>
       *
       * <pre>
       * Pose of the paddle
       * </pre>
       */
      public gazebo.msgs.GzPose.Pose getPose() {
        return pose_;
      }
      /**
       * <code>required .gazebo.msgs.Pose pose = 1;</code>
       *
       * <pre>
       * Pose of the paddle
       * </pre>
       */
      public gazebo.msgs.GzPose.PoseOrBuilder getPoseOrBuilder() {
        return pose_;
      }

      // required bool button_bumper = 2;
      public static final int BUTTON_BUMPER_FIELD_NUMBER = 2;
      private boolean buttonBumper_;
      /**
       * <code>required bool button_bumper = 2;</code>
       *
       * <pre>
       * The button labeled LB
       * </pre>
       */
      public boolean hasButtonBumper() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required bool button_bumper = 2;</code>
       *
       * <pre>
       * The button labeled LB
       * </pre>
       */
      public boolean getButtonBumper() {
        return buttonBumper_;
      }

      // required bool button_1 = 3;
      public static final int BUTTON_1_FIELD_NUMBER = 3;
      private boolean button1_;
      /**
       * <code>required bool button_1 = 3;</code>
       *
       * <pre>
       * Button 1
       * </pre>
       */
      public boolean hasButton1() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required bool button_1 = 3;</code>
       *
       * <pre>
       * Button 1
       * </pre>
       */
      public boolean getButton1() {
        return button1_;
      }

      // required bool button_2 = 4;
      public static final int BUTTON_2_FIELD_NUMBER = 4;
      private boolean button2_;
      /**
       * <code>required bool button_2 = 4;</code>
       *
       * <pre>
       * Button 2
       * </pre>
       */
      public boolean hasButton2() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required bool button_2 = 4;</code>
       *
       * <pre>
       * Button 2
       * </pre>
       */
      public boolean getButton2() {
        return button2_;
      }

      // required bool button_3 = 5;
      public static final int BUTTON_3_FIELD_NUMBER = 5;
      private boolean button3_;
      /**
       * <code>required bool button_3 = 5;</code>
       *
       * <pre>
       * Button 3
       * </pre>
       */
      public boolean hasButton3() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required bool button_3 = 5;</code>
       *
       * <pre>
       * Button 3
       * </pre>
       */
      public boolean getButton3() {
        return button3_;
      }

      // required bool button_4 = 6;
      public static final int BUTTON_4_FIELD_NUMBER = 6;
      private boolean button4_;
      /**
       * <code>required bool button_4 = 6;</code>
       *
       * <pre>
       * Button 4
       * </pre>
       */
      public boolean hasButton4() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required bool button_4 = 6;</code>
       *
       * <pre>
       * Button 4
       * </pre>
       */
      public boolean getButton4() {
        return button4_;
      }

      // required bool button_joy = 7;
      public static final int BUTTON_JOY_FIELD_NUMBER = 7;
      private boolean buttonJoy_;
      /**
       * <code>required bool button_joy = 7;</code>
       *
       * <pre>
       * Button that is activated by pressing down on the joystick.
       * </pre>
       */
      public boolean hasButtonJoy() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required bool button_joy = 7;</code>
       *
       * <pre>
       * Button that is activated by pressing down on the joystick.
       * </pre>
       */
      public boolean getButtonJoy() {
        return buttonJoy_;
      }

      // required bool button_center = 8;
      public static final int BUTTON_CENTER_FIELD_NUMBER = 8;
      private boolean buttonCenter_;
      /**
       * <code>required bool button_center = 8;</code>
       *
       * <pre>
       * The button located between button 1 and 2.
       * </pre>
       */
      public boolean hasButtonCenter() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required bool button_center = 8;</code>
       *
       * <pre>
       * The button located between button 1 and 2.
       * </pre>
       */
      public boolean getButtonCenter() {
        return buttonCenter_;
      }

      // required double joy_x = 9;
      public static final int JOY_X_FIELD_NUMBER = 9;
      private double joyX_;
      /**
       * <code>required double joy_x = 9;</code>
       *
       * <pre>
       * Range(-1, 1) where -1 == back, and +1 == forward.
       * </pre>
       */
      public boolean hasJoyX() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>required double joy_x = 9;</code>
       *
       * <pre>
       * Range(-1, 1) where -1 == back, and +1 == forward.
       * </pre>
       */
      public double getJoyX() {
        return joyX_;
      }

      // required double joy_y = 10;
      public static final int JOY_Y_FIELD_NUMBER = 10;
      private double joyY_;
      /**
       * <code>required double joy_y = 10;</code>
       *
       * <pre>
       * Range(-1, 1) where -1 == left, and +1 == right.
       * </pre>
       */
      public boolean hasJoyY() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>required double joy_y = 10;</code>
       *
       * <pre>
       * Range(-1, 1) where -1 == left, and +1 == right.
       * </pre>
       */
      public double getJoyY() {
        return joyY_;
      }

      // required double trigger = 11;
      public static final int TRIGGER_FIELD_NUMBER = 11;
      private double trigger_;
      /**
       * <code>required double trigger = 11;</code>
       *
       * <pre>
       * Range(0, 1) where 0 is no press, and 1 is full press.
       * </pre>
       */
      public boolean hasTrigger() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>required double trigger = 11;</code>
       *
       * <pre>
       * Range(0, 1) where 0 is no press, and 1 is full press.
       * </pre>
       */
      public double getTrigger() {
        return trigger_;
      }

      private void initFields() {
        pose_ = gazebo.msgs.GzPose.Pose.getDefaultInstance();
        buttonBumper_ = false;
        button1_ = false;
        button2_ = false;
        button3_ = false;
        button4_ = false;
        buttonJoy_ = false;
        buttonCenter_ = false;
        joyX_ = 0D;
        joyY_ = 0D;
        trigger_ = 0D;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasPose()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasButtonBumper()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasButton1()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasButton2()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasButton3()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasButton4()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasButtonJoy()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasButtonCenter()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasJoyX()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasJoyY()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasTrigger()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!getPose().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeMessage(1, pose_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBool(2, buttonBumper_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeBool(3, button1_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeBool(4, button2_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeBool(5, button3_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeBool(6, button4_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          output.writeBool(7, buttonJoy_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          output.writeBool(8, buttonCenter_);
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          output.writeDouble(9, joyX_);
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          output.writeDouble(10, joyY_);
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          output.writeDouble(11, trigger_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, pose_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(2, buttonBumper_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(3, button1_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(4, button2_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(5, button3_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(6, button4_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(7, buttonJoy_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(8, buttonCenter_);
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(9, joyX_);
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(10, joyY_);
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(11, trigger_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static gazebo.msgs.GzHydra.Hydra.Paddle parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static gazebo.msgs.GzHydra.Hydra.Paddle parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static gazebo.msgs.GzHydra.Hydra.Paddle parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static gazebo.msgs.GzHydra.Hydra.Paddle parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static gazebo.msgs.GzHydra.Hydra.Paddle parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static gazebo.msgs.GzHydra.Hydra.Paddle parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static gazebo.msgs.GzHydra.Hydra.Paddle parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static gazebo.msgs.GzHydra.Hydra.Paddle parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static gazebo.msgs.GzHydra.Hydra.Paddle parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static gazebo.msgs.GzHydra.Hydra.Paddle parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(gazebo.msgs.GzHydra.Hydra.Paddle prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code gazebo.msgs.Hydra.Paddle}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements gazebo.msgs.GzHydra.Hydra.PaddleOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return gazebo.msgs.GzHydra.internal_static_gazebo_msgs_Hydra_Paddle_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return gazebo.msgs.GzHydra.internal_static_gazebo_msgs_Hydra_Paddle_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  gazebo.msgs.GzHydra.Hydra.Paddle.class, gazebo.msgs.GzHydra.Hydra.Paddle.Builder.class);
        }

        // Construct using gazebo.msgs.GzHydra.Hydra.Paddle.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getPoseFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          if (poseBuilder_ == null) {
            pose_ = gazebo.msgs.GzPose.Pose.getDefaultInstance();
          } else {
            poseBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000001);
          buttonBumper_ = false;
          bitField0_ = (bitField0_ & ~0x00000002);
          button1_ = false;
          bitField0_ = (bitField0_ & ~0x00000004);
          button2_ = false;
          bitField0_ = (bitField0_ & ~0x00000008);
          button3_ = false;
          bitField0_ = (bitField0_ & ~0x00000010);
          button4_ = false;
          bitField0_ = (bitField0_ & ~0x00000020);
          buttonJoy_ = false;
          bitField0_ = (bitField0_ & ~0x00000040);
          buttonCenter_ = false;
          bitField0_ = (bitField0_ & ~0x00000080);
          joyX_ = 0D;
          bitField0_ = (bitField0_ & ~0x00000100);
          joyY_ = 0D;
          bitField0_ = (bitField0_ & ~0x00000200);
          trigger_ = 0D;
          bitField0_ = (bitField0_ & ~0x00000400);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return gazebo.msgs.GzHydra.internal_static_gazebo_msgs_Hydra_Paddle_descriptor;
        }

        public gazebo.msgs.GzHydra.Hydra.Paddle getDefaultInstanceForType() {
          return gazebo.msgs.GzHydra.Hydra.Paddle.getDefaultInstance();
        }

        public gazebo.msgs.GzHydra.Hydra.Paddle build() {
          gazebo.msgs.GzHydra.Hydra.Paddle result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public gazebo.msgs.GzHydra.Hydra.Paddle buildPartial() {
          gazebo.msgs.GzHydra.Hydra.Paddle result = new gazebo.msgs.GzHydra.Hydra.Paddle(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          if (poseBuilder_ == null) {
            result.pose_ = pose_;
          } else {
            result.pose_ = poseBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.buttonBumper_ = buttonBumper_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.button1_ = button1_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.button2_ = button2_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.button3_ = button3_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.button4_ = button4_;
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000040;
          }
          result.buttonJoy_ = buttonJoy_;
          if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
            to_bitField0_ |= 0x00000080;
          }
          result.buttonCenter_ = buttonCenter_;
          if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
            to_bitField0_ |= 0x00000100;
          }
          result.joyX_ = joyX_;
          if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
            to_bitField0_ |= 0x00000200;
          }
          result.joyY_ = joyY_;
          if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
            to_bitField0_ |= 0x00000400;
          }
          result.trigger_ = trigger_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof gazebo.msgs.GzHydra.Hydra.Paddle) {
            return mergeFrom((gazebo.msgs.GzHydra.Hydra.Paddle)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(gazebo.msgs.GzHydra.Hydra.Paddle other) {
          if (other == gazebo.msgs.GzHydra.Hydra.Paddle.getDefaultInstance()) return this;
          if (other.hasPose()) {
            mergePose(other.getPose());
          }
          if (other.hasButtonBumper()) {
            setButtonBumper(other.getButtonBumper());
          }
          if (other.hasButton1()) {
            setButton1(other.getButton1());
          }
          if (other.hasButton2()) {
            setButton2(other.getButton2());
          }
          if (other.hasButton3()) {
            setButton3(other.getButton3());
          }
          if (other.hasButton4()) {
            setButton4(other.getButton4());
          }
          if (other.hasButtonJoy()) {
            setButtonJoy(other.getButtonJoy());
          }
          if (other.hasButtonCenter()) {
            setButtonCenter(other.getButtonCenter());
          }
          if (other.hasJoyX()) {
            setJoyX(other.getJoyX());
          }
          if (other.hasJoyY()) {
            setJoyY(other.getJoyY());
          }
          if (other.hasTrigger()) {
            setTrigger(other.getTrigger());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasPose()) {
            
            return false;
          }
          if (!hasButtonBumper()) {
            
            return false;
          }
          if (!hasButton1()) {
            
            return false;
          }
          if (!hasButton2()) {
            
            return false;
          }
          if (!hasButton3()) {
            
            return false;
          }
          if (!hasButton4()) {
            
            return false;
          }
          if (!hasButtonJoy()) {
            
            return false;
          }
          if (!hasButtonCenter()) {
            
            return false;
          }
          if (!hasJoyX()) {
            
            return false;
          }
          if (!hasJoyY()) {
            
            return false;
          }
          if (!hasTrigger()) {
            
            return false;
          }
          if (!getPose().isInitialized()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          gazebo.msgs.GzHydra.Hydra.Paddle parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (gazebo.msgs.GzHydra.Hydra.Paddle) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // required .gazebo.msgs.Pose pose = 1;
        private gazebo.msgs.GzPose.Pose pose_ = gazebo.msgs.GzPose.Pose.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            gazebo.msgs.GzPose.Pose, gazebo.msgs.GzPose.Pose.Builder, gazebo.msgs.GzPose.PoseOrBuilder> poseBuilder_;
        /**
         * <code>required .gazebo.msgs.Pose pose = 1;</code>
         *
         * <pre>
         * Pose of the paddle
         * </pre>
         */
        public boolean hasPose() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required .gazebo.msgs.Pose pose = 1;</code>
         *
         * <pre>
         * Pose of the paddle
         * </pre>
         */
        public gazebo.msgs.GzPose.Pose getPose() {
          if (poseBuilder_ == null) {
            return pose_;
          } else {
            return poseBuilder_.getMessage();
          }
        }
        /**
         * <code>required .gazebo.msgs.Pose pose = 1;</code>
         *
         * <pre>
         * Pose of the paddle
         * </pre>
         */
        public Builder setPose(gazebo.msgs.GzPose.Pose value) {
          if (poseBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            pose_ = value;
            onChanged();
          } else {
            poseBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <code>required .gazebo.msgs.Pose pose = 1;</code>
         *
         * <pre>
         * Pose of the paddle
         * </pre>
         */
        public Builder setPose(
            gazebo.msgs.GzPose.Pose.Builder builderForValue) {
          if (poseBuilder_ == null) {
            pose_ = builderForValue.build();
            onChanged();
          } else {
            poseBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <code>required .gazebo.msgs.Pose pose = 1;</code>
         *
         * <pre>
         * Pose of the paddle
         * </pre>
         */
        public Builder mergePose(gazebo.msgs.GzPose.Pose value) {
          if (poseBuilder_ == null) {
            if (((bitField0_ & 0x00000001) == 0x00000001) &&
                pose_ != gazebo.msgs.GzPose.Pose.getDefaultInstance()) {
              pose_ =
                gazebo.msgs.GzPose.Pose.newBuilder(pose_).mergeFrom(value).buildPartial();
            } else {
              pose_ = value;
            }
            onChanged();
          } else {
            poseBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <code>required .gazebo.msgs.Pose pose = 1;</code>
         *
         * <pre>
         * Pose of the paddle
         * </pre>
         */
        public Builder clearPose() {
          if (poseBuilder_ == null) {
            pose_ = gazebo.msgs.GzPose.Pose.getDefaultInstance();
            onChanged();
          } else {
            poseBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }
        /**
         * <code>required .gazebo.msgs.Pose pose = 1;</code>
         *
         * <pre>
         * Pose of the paddle
         * </pre>
         */
        public gazebo.msgs.GzPose.Pose.Builder getPoseBuilder() {
          bitField0_ |= 0x00000001;
          onChanged();
          return getPoseFieldBuilder().getBuilder();
        }
        /**
         * <code>required .gazebo.msgs.Pose pose = 1;</code>
         *
         * <pre>
         * Pose of the paddle
         * </pre>
         */
        public gazebo.msgs.GzPose.PoseOrBuilder getPoseOrBuilder() {
          if (poseBuilder_ != null) {
            return poseBuilder_.getMessageOrBuilder();
          } else {
            return pose_;
          }
        }
        /**
         * <code>required .gazebo.msgs.Pose pose = 1;</code>
         *
         * <pre>
         * Pose of the paddle
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            gazebo.msgs.GzPose.Pose, gazebo.msgs.GzPose.Pose.Builder, gazebo.msgs.GzPose.PoseOrBuilder> 
            getPoseFieldBuilder() {
          if (poseBuilder_ == null) {
            poseBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                gazebo.msgs.GzPose.Pose, gazebo.msgs.GzPose.Pose.Builder, gazebo.msgs.GzPose.PoseOrBuilder>(
                    pose_,
                    getParentForChildren(),
                    isClean());
            pose_ = null;
          }
          return poseBuilder_;
        }

        // required bool button_bumper = 2;
        private boolean buttonBumper_ ;
        /**
         * <code>required bool button_bumper = 2;</code>
         *
         * <pre>
         * The button labeled LB
         * </pre>
         */
        public boolean hasButtonBumper() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required bool button_bumper = 2;</code>
         *
         * <pre>
         * The button labeled LB
         * </pre>
         */
        public boolean getButtonBumper() {
          return buttonBumper_;
        }
        /**
         * <code>required bool button_bumper = 2;</code>
         *
         * <pre>
         * The button labeled LB
         * </pre>
         */
        public Builder setButtonBumper(boolean value) {
          bitField0_ |= 0x00000002;
          buttonBumper_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required bool button_bumper = 2;</code>
         *
         * <pre>
         * The button labeled LB
         * </pre>
         */
        public Builder clearButtonBumper() {
          bitField0_ = (bitField0_ & ~0x00000002);
          buttonBumper_ = false;
          onChanged();
          return this;
        }

        // required bool button_1 = 3;
        private boolean button1_ ;
        /**
         * <code>required bool button_1 = 3;</code>
         *
         * <pre>
         * Button 1
         * </pre>
         */
        public boolean hasButton1() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>required bool button_1 = 3;</code>
         *
         * <pre>
         * Button 1
         * </pre>
         */
        public boolean getButton1() {
          return button1_;
        }
        /**
         * <code>required bool button_1 = 3;</code>
         *
         * <pre>
         * Button 1
         * </pre>
         */
        public Builder setButton1(boolean value) {
          bitField0_ |= 0x00000004;
          button1_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required bool button_1 = 3;</code>
         *
         * <pre>
         * Button 1
         * </pre>
         */
        public Builder clearButton1() {
          bitField0_ = (bitField0_ & ~0x00000004);
          button1_ = false;
          onChanged();
          return this;
        }

        // required bool button_2 = 4;
        private boolean button2_ ;
        /**
         * <code>required bool button_2 = 4;</code>
         *
         * <pre>
         * Button 2
         * </pre>
         */
        public boolean hasButton2() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>required bool button_2 = 4;</code>
         *
         * <pre>
         * Button 2
         * </pre>
         */
        public boolean getButton2() {
          return button2_;
        }
        /**
         * <code>required bool button_2 = 4;</code>
         *
         * <pre>
         * Button 2
         * </pre>
         */
        public Builder setButton2(boolean value) {
          bitField0_ |= 0x00000008;
          button2_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required bool button_2 = 4;</code>
         *
         * <pre>
         * Button 2
         * </pre>
         */
        public Builder clearButton2() {
          bitField0_ = (bitField0_ & ~0x00000008);
          button2_ = false;
          onChanged();
          return this;
        }

        // required bool button_3 = 5;
        private boolean button3_ ;
        /**
         * <code>required bool button_3 = 5;</code>
         *
         * <pre>
         * Button 3
         * </pre>
         */
        public boolean hasButton3() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>required bool button_3 = 5;</code>
         *
         * <pre>
         * Button 3
         * </pre>
         */
        public boolean getButton3() {
          return button3_;
        }
        /**
         * <code>required bool button_3 = 5;</code>
         *
         * <pre>
         * Button 3
         * </pre>
         */
        public Builder setButton3(boolean value) {
          bitField0_ |= 0x00000010;
          button3_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required bool button_3 = 5;</code>
         *
         * <pre>
         * Button 3
         * </pre>
         */
        public Builder clearButton3() {
          bitField0_ = (bitField0_ & ~0x00000010);
          button3_ = false;
          onChanged();
          return this;
        }

        // required bool button_4 = 6;
        private boolean button4_ ;
        /**
         * <code>required bool button_4 = 6;</code>
         *
         * <pre>
         * Button 4
         * </pre>
         */
        public boolean hasButton4() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>required bool button_4 = 6;</code>
         *
         * <pre>
         * Button 4
         * </pre>
         */
        public boolean getButton4() {
          return button4_;
        }
        /**
         * <code>required bool button_4 = 6;</code>
         *
         * <pre>
         * Button 4
         * </pre>
         */
        public Builder setButton4(boolean value) {
          bitField0_ |= 0x00000020;
          button4_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required bool button_4 = 6;</code>
         *
         * <pre>
         * Button 4
         * </pre>
         */
        public Builder clearButton4() {
          bitField0_ = (bitField0_ & ~0x00000020);
          button4_ = false;
          onChanged();
          return this;
        }

        // required bool button_joy = 7;
        private boolean buttonJoy_ ;
        /**
         * <code>required bool button_joy = 7;</code>
         *
         * <pre>
         * Button that is activated by pressing down on the joystick.
         * </pre>
         */
        public boolean hasButtonJoy() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <code>required bool button_joy = 7;</code>
         *
         * <pre>
         * Button that is activated by pressing down on the joystick.
         * </pre>
         */
        public boolean getButtonJoy() {
          return buttonJoy_;
        }
        /**
         * <code>required bool button_joy = 7;</code>
         *
         * <pre>
         * Button that is activated by pressing down on the joystick.
         * </pre>
         */
        public Builder setButtonJoy(boolean value) {
          bitField0_ |= 0x00000040;
          buttonJoy_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required bool button_joy = 7;</code>
         *
         * <pre>
         * Button that is activated by pressing down on the joystick.
         * </pre>
         */
        public Builder clearButtonJoy() {
          bitField0_ = (bitField0_ & ~0x00000040);
          buttonJoy_ = false;
          onChanged();
          return this;
        }

        // required bool button_center = 8;
        private boolean buttonCenter_ ;
        /**
         * <code>required bool button_center = 8;</code>
         *
         * <pre>
         * The button located between button 1 and 2.
         * </pre>
         */
        public boolean hasButtonCenter() {
          return ((bitField0_ & 0x00000080) == 0x00000080);
        }
        /**
         * <code>required bool button_center = 8;</code>
         *
         * <pre>
         * The button located between button 1 and 2.
         * </pre>
         */
        public boolean getButtonCenter() {
          return buttonCenter_;
        }
        /**
         * <code>required bool button_center = 8;</code>
         *
         * <pre>
         * The button located between button 1 and 2.
         * </pre>
         */
        public Builder setButtonCenter(boolean value) {
          bitField0_ |= 0x00000080;
          buttonCenter_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required bool button_center = 8;</code>
         *
         * <pre>
         * The button located between button 1 and 2.
         * </pre>
         */
        public Builder clearButtonCenter() {
          bitField0_ = (bitField0_ & ~0x00000080);
          buttonCenter_ = false;
          onChanged();
          return this;
        }

        // required double joy_x = 9;
        private double joyX_ ;
        /**
         * <code>required double joy_x = 9;</code>
         *
         * <pre>
         * Range(-1, 1) where -1 == back, and +1 == forward.
         * </pre>
         */
        public boolean hasJoyX() {
          return ((bitField0_ & 0x00000100) == 0x00000100);
        }
        /**
         * <code>required double joy_x = 9;</code>
         *
         * <pre>
         * Range(-1, 1) where -1 == back, and +1 == forward.
         * </pre>
         */
        public double getJoyX() {
          return joyX_;
        }
        /**
         * <code>required double joy_x = 9;</code>
         *
         * <pre>
         * Range(-1, 1) where -1 == back, and +1 == forward.
         * </pre>
         */
        public Builder setJoyX(double value) {
          bitField0_ |= 0x00000100;
          joyX_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required double joy_x = 9;</code>
         *
         * <pre>
         * Range(-1, 1) where -1 == back, and +1 == forward.
         * </pre>
         */
        public Builder clearJoyX() {
          bitField0_ = (bitField0_ & ~0x00000100);
          joyX_ = 0D;
          onChanged();
          return this;
        }

        // required double joy_y = 10;
        private double joyY_ ;
        /**
         * <code>required double joy_y = 10;</code>
         *
         * <pre>
         * Range(-1, 1) where -1 == left, and +1 == right.
         * </pre>
         */
        public boolean hasJoyY() {
          return ((bitField0_ & 0x00000200) == 0x00000200);
        }
        /**
         * <code>required double joy_y = 10;</code>
         *
         * <pre>
         * Range(-1, 1) where -1 == left, and +1 == right.
         * </pre>
         */
        public double getJoyY() {
          return joyY_;
        }
        /**
         * <code>required double joy_y = 10;</code>
         *
         * <pre>
         * Range(-1, 1) where -1 == left, and +1 == right.
         * </pre>
         */
        public Builder setJoyY(double value) {
          bitField0_ |= 0x00000200;
          joyY_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required double joy_y = 10;</code>
         *
         * <pre>
         * Range(-1, 1) where -1 == left, and +1 == right.
         * </pre>
         */
        public Builder clearJoyY() {
          bitField0_ = (bitField0_ & ~0x00000200);
          joyY_ = 0D;
          onChanged();
          return this;
        }

        // required double trigger = 11;
        private double trigger_ ;
        /**
         * <code>required double trigger = 11;</code>
         *
         * <pre>
         * Range(0, 1) where 0 is no press, and 1 is full press.
         * </pre>
         */
        public boolean hasTrigger() {
          return ((bitField0_ & 0x00000400) == 0x00000400);
        }
        /**
         * <code>required double trigger = 11;</code>
         *
         * <pre>
         * Range(0, 1) where 0 is no press, and 1 is full press.
         * </pre>
         */
        public double getTrigger() {
          return trigger_;
        }
        /**
         * <code>required double trigger = 11;</code>
         *
         * <pre>
         * Range(0, 1) where 0 is no press, and 1 is full press.
         * </pre>
         */
        public Builder setTrigger(double value) {
          bitField0_ |= 0x00000400;
          trigger_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required double trigger = 11;</code>
         *
         * <pre>
         * Range(0, 1) where 0 is no press, and 1 is full press.
         * </pre>
         */
        public Builder clearTrigger() {
          bitField0_ = (bitField0_ & ~0x00000400);
          trigger_ = 0D;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:gazebo.msgs.Hydra.Paddle)
      }

      static {
        defaultInstance = new Paddle(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:gazebo.msgs.Hydra.Paddle)
    }

    private int bitField0_;
    // required .gazebo.msgs.Hydra.Paddle right = 1;
    public static final int RIGHT_FIELD_NUMBER = 1;
    private gazebo.msgs.GzHydra.Hydra.Paddle right_;
    /**
     * <code>required .gazebo.msgs.Hydra.Paddle right = 1;</code>
     *
     * <pre>
     * Info for the right paddle
     * </pre>
     */
    public boolean hasRight() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .gazebo.msgs.Hydra.Paddle right = 1;</code>
     *
     * <pre>
     * Info for the right paddle
     * </pre>
     */
    public gazebo.msgs.GzHydra.Hydra.Paddle getRight() {
      return right_;
    }
    /**
     * <code>required .gazebo.msgs.Hydra.Paddle right = 1;</code>
     *
     * <pre>
     * Info for the right paddle
     * </pre>
     */
    public gazebo.msgs.GzHydra.Hydra.PaddleOrBuilder getRightOrBuilder() {
      return right_;
    }

    // required .gazebo.msgs.Hydra.Paddle left = 2;
    public static final int LEFT_FIELD_NUMBER = 2;
    private gazebo.msgs.GzHydra.Hydra.Paddle left_;
    /**
     * <code>required .gazebo.msgs.Hydra.Paddle left = 2;</code>
     *
     * <pre>
     * Info for the left paddle
     * </pre>
     */
    public boolean hasLeft() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .gazebo.msgs.Hydra.Paddle left = 2;</code>
     *
     * <pre>
     * Info for the left paddle
     * </pre>
     */
    public gazebo.msgs.GzHydra.Hydra.Paddle getLeft() {
      return left_;
    }
    /**
     * <code>required .gazebo.msgs.Hydra.Paddle left = 2;</code>
     *
     * <pre>
     * Info for the left paddle
     * </pre>
     */
    public gazebo.msgs.GzHydra.Hydra.PaddleOrBuilder getLeftOrBuilder() {
      return left_;
    }

    private void initFields() {
      right_ = gazebo.msgs.GzHydra.Hydra.Paddle.getDefaultInstance();
      left_ = gazebo.msgs.GzHydra.Hydra.Paddle.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasRight()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLeft()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getRight().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getLeft().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, right_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, left_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, right_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, left_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static gazebo.msgs.GzHydra.Hydra parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gazebo.msgs.GzHydra.Hydra parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gazebo.msgs.GzHydra.Hydra parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gazebo.msgs.GzHydra.Hydra parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gazebo.msgs.GzHydra.Hydra parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static gazebo.msgs.GzHydra.Hydra parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static gazebo.msgs.GzHydra.Hydra parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static gazebo.msgs.GzHydra.Hydra parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static gazebo.msgs.GzHydra.Hydra parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static gazebo.msgs.GzHydra.Hydra parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(gazebo.msgs.GzHydra.Hydra prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code gazebo.msgs.Hydra}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements gazebo.msgs.GzHydra.HydraOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gazebo.msgs.GzHydra.internal_static_gazebo_msgs_Hydra_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gazebo.msgs.GzHydra.internal_static_gazebo_msgs_Hydra_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gazebo.msgs.GzHydra.Hydra.class, gazebo.msgs.GzHydra.Hydra.Builder.class);
      }

      // Construct using gazebo.msgs.GzHydra.Hydra.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRightFieldBuilder();
          getLeftFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (rightBuilder_ == null) {
          right_ = gazebo.msgs.GzHydra.Hydra.Paddle.getDefaultInstance();
        } else {
          rightBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (leftBuilder_ == null) {
          left_ = gazebo.msgs.GzHydra.Hydra.Paddle.getDefaultInstance();
        } else {
          leftBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return gazebo.msgs.GzHydra.internal_static_gazebo_msgs_Hydra_descriptor;
      }

      public gazebo.msgs.GzHydra.Hydra getDefaultInstanceForType() {
        return gazebo.msgs.GzHydra.Hydra.getDefaultInstance();
      }

      public gazebo.msgs.GzHydra.Hydra build() {
        gazebo.msgs.GzHydra.Hydra result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public gazebo.msgs.GzHydra.Hydra buildPartial() {
        gazebo.msgs.GzHydra.Hydra result = new gazebo.msgs.GzHydra.Hydra(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (rightBuilder_ == null) {
          result.right_ = right_;
        } else {
          result.right_ = rightBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (leftBuilder_ == null) {
          result.left_ = left_;
        } else {
          result.left_ = leftBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof gazebo.msgs.GzHydra.Hydra) {
          return mergeFrom((gazebo.msgs.GzHydra.Hydra)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(gazebo.msgs.GzHydra.Hydra other) {
        if (other == gazebo.msgs.GzHydra.Hydra.getDefaultInstance()) return this;
        if (other.hasRight()) {
          mergeRight(other.getRight());
        }
        if (other.hasLeft()) {
          mergeLeft(other.getLeft());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasRight()) {
          
          return false;
        }
        if (!hasLeft()) {
          
          return false;
        }
        if (!getRight().isInitialized()) {
          
          return false;
        }
        if (!getLeft().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        gazebo.msgs.GzHydra.Hydra parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (gazebo.msgs.GzHydra.Hydra) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .gazebo.msgs.Hydra.Paddle right = 1;
      private gazebo.msgs.GzHydra.Hydra.Paddle right_ = gazebo.msgs.GzHydra.Hydra.Paddle.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          gazebo.msgs.GzHydra.Hydra.Paddle, gazebo.msgs.GzHydra.Hydra.Paddle.Builder, gazebo.msgs.GzHydra.Hydra.PaddleOrBuilder> rightBuilder_;
      /**
       * <code>required .gazebo.msgs.Hydra.Paddle right = 1;</code>
       *
       * <pre>
       * Info for the right paddle
       * </pre>
       */
      public boolean hasRight() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .gazebo.msgs.Hydra.Paddle right = 1;</code>
       *
       * <pre>
       * Info for the right paddle
       * </pre>
       */
      public gazebo.msgs.GzHydra.Hydra.Paddle getRight() {
        if (rightBuilder_ == null) {
          return right_;
        } else {
          return rightBuilder_.getMessage();
        }
      }
      /**
       * <code>required .gazebo.msgs.Hydra.Paddle right = 1;</code>
       *
       * <pre>
       * Info for the right paddle
       * </pre>
       */
      public Builder setRight(gazebo.msgs.GzHydra.Hydra.Paddle value) {
        if (rightBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          right_ = value;
          onChanged();
        } else {
          rightBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .gazebo.msgs.Hydra.Paddle right = 1;</code>
       *
       * <pre>
       * Info for the right paddle
       * </pre>
       */
      public Builder setRight(
          gazebo.msgs.GzHydra.Hydra.Paddle.Builder builderForValue) {
        if (rightBuilder_ == null) {
          right_ = builderForValue.build();
          onChanged();
        } else {
          rightBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .gazebo.msgs.Hydra.Paddle right = 1;</code>
       *
       * <pre>
       * Info for the right paddle
       * </pre>
       */
      public Builder mergeRight(gazebo.msgs.GzHydra.Hydra.Paddle value) {
        if (rightBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              right_ != gazebo.msgs.GzHydra.Hydra.Paddle.getDefaultInstance()) {
            right_ =
              gazebo.msgs.GzHydra.Hydra.Paddle.newBuilder(right_).mergeFrom(value).buildPartial();
          } else {
            right_ = value;
          }
          onChanged();
        } else {
          rightBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .gazebo.msgs.Hydra.Paddle right = 1;</code>
       *
       * <pre>
       * Info for the right paddle
       * </pre>
       */
      public Builder clearRight() {
        if (rightBuilder_ == null) {
          right_ = gazebo.msgs.GzHydra.Hydra.Paddle.getDefaultInstance();
          onChanged();
        } else {
          rightBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .gazebo.msgs.Hydra.Paddle right = 1;</code>
       *
       * <pre>
       * Info for the right paddle
       * </pre>
       */
      public gazebo.msgs.GzHydra.Hydra.Paddle.Builder getRightBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getRightFieldBuilder().getBuilder();
      }
      /**
       * <code>required .gazebo.msgs.Hydra.Paddle right = 1;</code>
       *
       * <pre>
       * Info for the right paddle
       * </pre>
       */
      public gazebo.msgs.GzHydra.Hydra.PaddleOrBuilder getRightOrBuilder() {
        if (rightBuilder_ != null) {
          return rightBuilder_.getMessageOrBuilder();
        } else {
          return right_;
        }
      }
      /**
       * <code>required .gazebo.msgs.Hydra.Paddle right = 1;</code>
       *
       * <pre>
       * Info for the right paddle
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          gazebo.msgs.GzHydra.Hydra.Paddle, gazebo.msgs.GzHydra.Hydra.Paddle.Builder, gazebo.msgs.GzHydra.Hydra.PaddleOrBuilder> 
          getRightFieldBuilder() {
        if (rightBuilder_ == null) {
          rightBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              gazebo.msgs.GzHydra.Hydra.Paddle, gazebo.msgs.GzHydra.Hydra.Paddle.Builder, gazebo.msgs.GzHydra.Hydra.PaddleOrBuilder>(
                  right_,
                  getParentForChildren(),
                  isClean());
          right_ = null;
        }
        return rightBuilder_;
      }

      // required .gazebo.msgs.Hydra.Paddle left = 2;
      private gazebo.msgs.GzHydra.Hydra.Paddle left_ = gazebo.msgs.GzHydra.Hydra.Paddle.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          gazebo.msgs.GzHydra.Hydra.Paddle, gazebo.msgs.GzHydra.Hydra.Paddle.Builder, gazebo.msgs.GzHydra.Hydra.PaddleOrBuilder> leftBuilder_;
      /**
       * <code>required .gazebo.msgs.Hydra.Paddle left = 2;</code>
       *
       * <pre>
       * Info for the left paddle
       * </pre>
       */
      public boolean hasLeft() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .gazebo.msgs.Hydra.Paddle left = 2;</code>
       *
       * <pre>
       * Info for the left paddle
       * </pre>
       */
      public gazebo.msgs.GzHydra.Hydra.Paddle getLeft() {
        if (leftBuilder_ == null) {
          return left_;
        } else {
          return leftBuilder_.getMessage();
        }
      }
      /**
       * <code>required .gazebo.msgs.Hydra.Paddle left = 2;</code>
       *
       * <pre>
       * Info for the left paddle
       * </pre>
       */
      public Builder setLeft(gazebo.msgs.GzHydra.Hydra.Paddle value) {
        if (leftBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          left_ = value;
          onChanged();
        } else {
          leftBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .gazebo.msgs.Hydra.Paddle left = 2;</code>
       *
       * <pre>
       * Info for the left paddle
       * </pre>
       */
      public Builder setLeft(
          gazebo.msgs.GzHydra.Hydra.Paddle.Builder builderForValue) {
        if (leftBuilder_ == null) {
          left_ = builderForValue.build();
          onChanged();
        } else {
          leftBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .gazebo.msgs.Hydra.Paddle left = 2;</code>
       *
       * <pre>
       * Info for the left paddle
       * </pre>
       */
      public Builder mergeLeft(gazebo.msgs.GzHydra.Hydra.Paddle value) {
        if (leftBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              left_ != gazebo.msgs.GzHydra.Hydra.Paddle.getDefaultInstance()) {
            left_ =
              gazebo.msgs.GzHydra.Hydra.Paddle.newBuilder(left_).mergeFrom(value).buildPartial();
          } else {
            left_ = value;
          }
          onChanged();
        } else {
          leftBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .gazebo.msgs.Hydra.Paddle left = 2;</code>
       *
       * <pre>
       * Info for the left paddle
       * </pre>
       */
      public Builder clearLeft() {
        if (leftBuilder_ == null) {
          left_ = gazebo.msgs.GzHydra.Hydra.Paddle.getDefaultInstance();
          onChanged();
        } else {
          leftBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>required .gazebo.msgs.Hydra.Paddle left = 2;</code>
       *
       * <pre>
       * Info for the left paddle
       * </pre>
       */
      public gazebo.msgs.GzHydra.Hydra.Paddle.Builder getLeftBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getLeftFieldBuilder().getBuilder();
      }
      /**
       * <code>required .gazebo.msgs.Hydra.Paddle left = 2;</code>
       *
       * <pre>
       * Info for the left paddle
       * </pre>
       */
      public gazebo.msgs.GzHydra.Hydra.PaddleOrBuilder getLeftOrBuilder() {
        if (leftBuilder_ != null) {
          return leftBuilder_.getMessageOrBuilder();
        } else {
          return left_;
        }
      }
      /**
       * <code>required .gazebo.msgs.Hydra.Paddle left = 2;</code>
       *
       * <pre>
       * Info for the left paddle
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          gazebo.msgs.GzHydra.Hydra.Paddle, gazebo.msgs.GzHydra.Hydra.Paddle.Builder, gazebo.msgs.GzHydra.Hydra.PaddleOrBuilder> 
          getLeftFieldBuilder() {
        if (leftBuilder_ == null) {
          leftBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              gazebo.msgs.GzHydra.Hydra.Paddle, gazebo.msgs.GzHydra.Hydra.Paddle.Builder, gazebo.msgs.GzHydra.Hydra.PaddleOrBuilder>(
                  left_,
                  getParentForChildren(),
                  isClean());
          left_ = null;
        }
        return leftBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:gazebo.msgs.Hydra)
    }

    static {
      defaultInstance = new Hydra(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:gazebo.msgs.Hydra)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_gazebo_msgs_Hydra_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gazebo_msgs_Hydra_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_gazebo_msgs_Hydra_Paddle_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_gazebo_msgs_Hydra_Paddle_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\013hydra.proto\022\013gazebo.msgs\032\npose.proto\"\277" +
      "\002\n\005Hydra\022(\n\005right\030\001 \002(\0132\031.gazebo.msgs.Hy" +
      "dra.Paddle\022\'\n\004left\030\002 \002(\0132\031.gazebo.msgs.H" +
      "ydra.Paddle\032\342\001\n\006Paddle\022\037\n\004pose\030\001 \002(\0132\021.g" +
      "azebo.msgs.Pose\022\025\n\rbutton_bumper\030\002 \002(\010\022\020" +
      "\n\010button_1\030\003 \002(\010\022\020\n\010button_2\030\004 \002(\010\022\020\n\010bu" +
      "tton_3\030\005 \002(\010\022\020\n\010button_4\030\006 \002(\010\022\022\n\nbutton" +
      "_joy\030\007 \002(\010\022\025\n\rbutton_center\030\010 \002(\010\022\r\n\005joy" +
      "_x\030\t \002(\001\022\r\n\005joy_y\030\n \002(\001\022\017\n\007trigger\030\013 \002(\001" +
      "B\tB\007GzHydra"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_gazebo_msgs_Hydra_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_gazebo_msgs_Hydra_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_gazebo_msgs_Hydra_descriptor,
              new java.lang.String[] { "Right", "Left", });
          internal_static_gazebo_msgs_Hydra_Paddle_descriptor =
            internal_static_gazebo_msgs_Hydra_descriptor.getNestedTypes().get(0);
          internal_static_gazebo_msgs_Hydra_Paddle_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_gazebo_msgs_Hydra_Paddle_descriptor,
              new java.lang.String[] { "Pose", "ButtonBumper", "Button1", "Button2", "Button3", "Button4", "ButtonJoy", "ButtonCenter", "JoyX", "JoyY", "Trigger", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          gazebo.msgs.GzPose.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
